import pandas as pd
def check_unexpected_strings(df, columns):
    for col in columns:
        # 检查非ASCII字符
        df[col] = df[col].astype(str)
        non_ascii = df[col].apply(lambda x: any(ord(c) > 127 for c in x))
        if non_ascii.any():
            print(f"列 {col} 存在非ASCII字符:")
            print(df[non_ascii])

        # 检查是否有空字符串或NULL值
        null_values = df[col].isnull() | (df[col] == '')
        if null_values.any():
            print(f"列 {col} 存在空值或NULL值:")
            print(df[null_values])

def check_unexpected_numerical_values(df, columns):
    for col in columns:
        # 检查是否有负值（假设价格或数量不应为负）
        negative_values = df[col] < 0
        if negative_values.any():
            print(f"列 {col} 存在负值:")
            print(df[negative_values])

        # 检查是否有非数字数据
        non_numeric = df[col].apply(pd.to_numeric, errors='coerce').isnull()
        if non_numeric.any():
            print(f"列 {col} 存在非数字数据:")
            print(df[non_numeric])

def check_unexpected_dates(df, columns):
    for col in columns:
        # 尝试将日期列转换为日期类型，错误的日期会变成NaT
        df[col] = pd.to_datetime(df[col], errors='coerce')
        invalid_dates = df[col].isnull()
        if invalid_dates.any():
            print(f"列 {col} 存在无效日期:")
            print(df[invalid_dates])


def check_edge_cases(df, columns):
    for col in columns:
        # 检查最大值和最小值
        max_value = df[col].max()
        min_value = df[col].min()
        print(f"列 {col} 的最大值：{max_value}，最小值：{min_value}")

        # 检查空值
        null_values = df[col].isnull()
        if null_values.any():
            print(f"列 {col} 存在空值：")
            print(df[null_values])


def check_join_integrity(df1, df2, join_column):
    # 检查联接键是否在两个数据框中都存在
    missing_in_df1 = df2[~df2[join_column].isin(df1[join_column])]
    if not missing_in_df1.empty:
        print(f"在df1中缺少的记录:")
        print(missing_in_df1)

    missing_in_df2 = df1[~df1[join_column].isin(df2[join_column])]
    if not missing_in_df2.empty:
        print(f"在df2中缺少的记录:")
        print(missing_in_df2)

# 示例数据
data = {'name': ['John', 'Anna', 'Müller', 'Steve', None], 'age': [29, 22, None, 35, -1],'date': ['2024-01-01', '2024-02-30', '2023-12-25', '2024-09-33','invalid_date']}
df = pd.DataFrame(data)
# 基础测试
check_unexpected_strings(df, ['name'])
check_unexpected_numerical_values(df, ['age'])
check_unexpected_dates(df, ['date'])
check_edge_cases(df, ['age'])

# 测试关联

data1 = {'id': [1, 2, 3], 'name': ['Alice', 'Bob', 'Charlie']}
data2 = {'id': [2, 3, 4], 'score': [85, 92, 78]}
df1 = pd.DataFrame(data1)
df2 = pd.DataFrame(data2)

check_join_integrity(df1, df2, 'id')
